#!/bin/bash
#
#
# call this every minute from cron to always have the process
#
# crontab exampless
# 
# ROOT'S CRONTAB:
#	(master -- for laptop)
#	* * * * * /home/abarry/realtime/externals/timesync/cronTimesync "/home/odroid/realtime/externals/timesync/build/bin/timesync -m -p 10000" | /usr/bin/logger -t "timesync-cron"
#
#	(slave -- for odroid)
#   * * * * * /home/odroid/realtime/externals/timesync/cronTimesync "/home/odroid/realtime/externals/timesync/build/bin/timesync -s -p 10000" | /usr/bin/logger -t "timesync-cron"
#
# USER CRONTAB:
#	* * * * * /home/odroid/realtime/startup/cronStartup "bot-procman-deputy" "bot-procman-dep" | /usr/bin/logger -t "bot-procman-cron"
#	
#

ENV_SCRIPT=/home/odroid/realtime/scripts/setEnv

# check for command line arguments
if (( $# < 2 ))
then
    echo "Error: not enough arguments"
    echo "useage: ./cronStartup [command] [pgrep search string]"
    echo "example: ./cronStartup \"bot-procman-deputy\" \"bot-procman-dep\""
    exit
fi


# set this to be the command to run
COMMAND=$1

# set this for the string to search for in ps -A
PS_SEARCH=$2


# check for existing prgram running
if [ `pgrep $PS_SEARCH |wc -l` = 0 ]
then
    echo "Found no $PS_SEARCH, starting one..."
    # set up environment variables
    /bin/bash -lc "source $ENV_SCRIPT; $COMMAND &"
else
    echo "Found a $PS_SEARCH, so not starting a new one."
fi

